version: "3.3"

services:
  geoserver:
    image: kartoza/geoserver:2.18.0
    environment:
      - SAMPLE_DATA=true
      - GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}
      - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}
    ports:
      - ${GEOSERVER_PORT}:8080

  geoserver-setup:
    build:
      context: https://github.com/VCityTeam/Geoserver-Setup-docker.git
      dockerfile: geoserver-setup-context/Dockerfile
      args:
        GEOSERVER_DATA_GITHUB_REPOSITORY: ${GEOSERVER_DATA_GITHUB_REPOSITORY}
        GEOSERVER_DATA_GITHUB_REPOSITORY_NAME: ${GEOSERVER_DATA_GITHUB_REPOSITORY_NAME}
        GEOSERVER_DATA_IMPORT_DIR: ${GEOSERVER_DATA_IMPORT_DIR}
    environment:
      - WORKSPACE=${GEOSERVER_WORKSPACE}
      - MAX_CONNECTION_ATTEMPTS=${GEOSERVER_MAX_CONNECTION_ATTEMPTS}
      - TIME_CONNECTION_ATTEMPTS=${GEOSERVER_TIME_CONNECTION_ATTEMPTS}
      - GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}
      - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}
      - GEOSERVER_CATALOG_ADDRESS=${GEOSERVER_CATALOG_ADDRESS}
      - GEOSERVER_SOCKET_HOST=${GEOSERVER_SOCKET_HOST}
      - GEOSERVER_SOCKET_PORT=${GEOSERVER_SOCKET_PORT}
    depends_on: 
      - geoserver

  postgres:
    restart: unless-stopped
    image: postgres:10
    container_name: Spatial-Multimedia-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB_NAME}
    volumes:
      - ./postgres-data/postgres:/var/lib/postgresql/data
    expose:
      - ${POSTGRES_PORT}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    command: -p ${POSTGRES_PORT}

  spatial-multimedia-db:
    build:
      context: https://github.com/VCityTeam/Spatial-Multimedia-DB-docker.git
      dockerfile: Spatial-Multimedia-DB-context/Dockerfile
    environment:
      - POSTGRES_ORDBMS=${POSTGRES_ORDBMS}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB_NAME=${POSTGRES_DB_NAME}
      - SPATIAL_MULTIMEDIA_DB_PORT=${SPATIAL_MULTIMEDIA_DB_PORT}
      - SPATIAL_MULTIMEDIA_DB_ADMIN_EMAIL=${SPATIAL_MULTIMEDIA_DB_ADMIN_EMAIL}
      - SPATIAL_MULTIMEDIA_DB_ADMIN_FIRST_NAME=${SPATIAL_MULTIMEDIA_DB_ADMIN_FIRST_NAME}
      - SPATIAL_MULTIMEDIA_DB_ADMIN_LAST_NAME=${SPATIAL_MULTIMEDIA_DB_ADMIN_LAST_NAME}
      - SPATIAL_MULTIMEDIA_DB_ADMIN_PASSWORD=${SPATIAL_MULTIMEDIA_DB_ADMIN_PASSWORD}
      - SPATIAL_MULTIMEDIA_DB_ADMIN_USERNAME=${SPATIAL_MULTIMEDIA_DB_ADMIN_USERNAME}
    ports:
      - ${SPATIAL_MULTIMEDIA_DB_PORT}:5000
    volumes:
      - .:/api
    depends_on:
      - postgres

  3dtiles-server:
    build:
      context: https://github.com/VCityTeam/3DTiles-Server-docker.git
      dockerfile: 3dtiles-server-context/Dockerfile
      args:
        TILESET_SOURCE: ${TILESET_SOURCE}
        TILESET_SERVER_PORT: ${TILESET_SERVER_PORT}
    ports:
      - ${TILESET_SERVER_PORT}:${TILESET_SERVER_PORT}

  udviz:
    build:
      context: ./ud-viz-context
      args:
        GEOSERVER_FQDN: ${GEOSERVER_FQDN}
        GEOSERVER_PORT: ${GEOSERVER_PORT}
        SPATIAL_MULTIMEDIA_DB_FQDN: ${SPATIAL_MULTIMEDIA_DB_FQDN}
        SPATIAL_MULTIMEDIA_DB_PORT: ${SPATIAL_MULTIMEDIA_DB_PORT}
        TILESET_CUSTOM_SERVER: ${TILESET_CUSTOM_SERVER}
        UD_VIZ_PORT: ${UD_VIZ_PORT}
        UD_VIZ_DEMO_FOLDER: ${UD_VIZ_DEMO_FOLDER}
    command: node ./index.js ../DatAgora_PartDieu ${UD_VIZ_PORT}
    ports:
      - ${UD_VIZ_PORT}:${UD_VIZ_PORT}
